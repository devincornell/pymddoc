@article{Welch2006,
   abstract = {In 1960, R.E. Kalman published his famous paper describing a recursive solution to the discrete-data linear filtering problem. Since that time, due in large part to advances in digital computing, the Kalman filter has been the subject of extensive research and application, particularly in the area of autonomous or assisted navigation. The Kalman filter is a set of mathematical equations that provides an efficient computational (recursive) means to estimate the state of a process, in a way that minimizes the mean of the squared error. The filter is very powerful in several aspects: it supports estimations of past, present, and even future states, and it can do so even when the precise nature of the modeled system is unknown. The purpose of this paper is to provide a practical introduction to the discrete Kalman filter. This introduction includes a description and some discussion of the basic discrete Kalman filter, a derivation, description and some discussion of the extended Kalman filter, and a relatively simple (tangible) example with real numbers & results.},
   author = {Greg Welch and Gary Bishop},
   editor = {Addison-WesleyEditor Acm Press},
   issn = {10069313},
   issue = {1},
   institution = {University of North Carolina at Chapel Hill},
   journal = {In Practice},
   pages = {1-16},
   pmid = {20578276},
   publisher = {Citeseer},
   title = {An Introduction to the Kalman Filter},
   volume = {7},
   url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.79.6578&amp;rep=rep1&amp;type=pdf},
   year = {2006},
}
@book{Pedersen2008,
   abstract = {Matrix identities, relations and approximations. A desktop reference for quick overview of mathematics of matrices.},
   author = {Michael Syskind Pedersen and Bill Baxter and Brian Templeton and Christian Rishøj and Douglas L Theobald and Esben Hoegh-rasmussen and Glynne Casteel and Jun Bin Gao and Kamil Dedecius and Korbinian Strim and Lars Christiansen and Lars Kai Hansen and Leland Wilkinson and Liguo He and Miguel Bar and Ole Winther and Pavel Sakov and Stephan Hattinger and Kaare Breandt Petersen and Christian Rishø j},
   doi = {10.1111/j.1365-294X.2006.03161.x},
   editor = {B R Bloom},
   issn = {09621083},
   issue = {1},
   institution = {Technical University of Denmark},
   journal = {Matrix},
   keywords = {acknowledgements,bill baxter,brian templeton,christian,christian rishøj,contributions,derivative,derivative inverse matrix,determinant,differentiate a matrix,matrix algebra,matrix identities,matrix relations,suggestions,thank following,we would like},
   pages = {1-71},
   pmid = {17284204},
   publisher = {Citeseer},
   title = {The Matrix Cookbook},
   volume = {M},
   url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.139.3165&amp;rep=rep1&amp;type=pdf},
   year = {2008},
}
@article{Maqbool2007,
   abstract = {Gaining an architectural level understanding of a software system is important for many reasons. When the description of a system's architecture does not exist, attempts must be made to recover it. In recent years, researchers have explored the use of clustering for recovering a software system's architecture, given only its source code. The main contributions of this paper are given as follows. First, we review hierarchical clustering research in the context of software architecture recovery and modularization. Second, to employ clustering meaningfully, it is necessary to understand the peculiarities of the software domain, as well as the behavior of clustering measures and algorithms in this domain. To this end, we provide a detailed analysis of the behavior of various similarity and distance measures that may be employed for software clustering. Third, we analyze the clustering process of various well-known clustering algorithms by using multiple criteria, and we show how arbitrary decisions taken by these algorithms during clustering affect the quality of their results. Finally, we present an analysis of two recently proposed clustering algorithms, revealing close similarities in their apparently different clustering approaches. Experiments on four legacy software systems provide insight into the behavior of well-known clustering algorithms and their characteristics in the software domain.},
   author = {Onaiza Maqbool and Haroon Babri},
   issue = {11},
   journal = {IEEE Transactions on Software Engineering},
   keywords = {Arbitrary decisions,Architecture recovery,Hierarchical clustering,Reengineering,Reverse engineering},
   pages = {759-780},
   title = {Hierarchical clustering for software architecture recovery},
   volume = {33},
   year = {2007},
}
}
@article{Schmitz1999,
   abstract = {Although artificial neural networks can represent a variety of complex systems with a high degree of accuracy, these connectionist models are difficult to interpret. This significantly limits the applicability of neural networks in practice, especially where a premium is placed on the comprehensibility or reliability of systems. A novel artificial neural-network decision tree algorithm (ANN-DT) is therefore proposed, which extracts binary decision trees from a trained neural network. The ANN-DT algorithm uses the neural network to generate outputs for samples interpolated from the training data set. In contrast to existing techniques, ANN-DT can extract rules from feedforward neural networks with continuous outputs. These rules are extracted from the neural network without making assumptions about the internal structure of the neural network or the features of the data. A novel attribute selection criterion based on a significance analysis of the variables on the neural-network output is examined. It is shown to have significant benefits in certain cases when compared with the standard criteria of minimum weighted variance over the branches. In three case studies the ANN-DT algorithm compared favorably with CART, a standard decision tree algorithm.},
   author = {Gregor P J Schmitz and Chris Aldrich and Francois S. Gouws},
   issue = {6},
   journal = {IEEE Transactions on Neural Networks},
   pages = {1392-1401},
   publisher = {Ieee},
   title = {ANN-DT: An algorithm for extraction of decision trees from artificial neural networks},
   volume = {10},
   year = {1999},
}
@article{Hu2007,
   abstract = {We use a multi-stream extended Kalman filter for the CATS benchmark (Competition on Artificial Time Series), to train recurrent multilayer perceptrons. A weighted bidirectional approach is adopted to combine forward and backward predictions and to generate the final predictions on the missing points. ?? 2007 Elsevier B.V. All rights reserved.},
   author = {Xiao Hu and Danil V. Prokhorov and Donald C. Wunsch},
   doi = {10.1016/j.neucom.2005.12.135},
   issn = {09252312},
   issue = {13-15},
   journal = {Neurocomputing},
   keywords = {Backpropagation through time,Extended Kalman filter,Recurrent neural networks,Weighted bidirectional prediction},
   month = {8},
   pages = {2392-2399},
   title = {Time series prediction with a weighted bidirectional multi-stream extended Kalman filter},
   volume = {70},
   url = {http://linkinghub.elsevier.com/retrieve/pii/S0925231207000434},
   year = {2007},
}